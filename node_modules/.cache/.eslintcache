[{"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\index.js":"1","C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\App.js":"2","C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\reportWebVitals.js":"3","C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\Coin\\Coin.jsx":"4","C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx":"5","C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx":"6","C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\AppHeader\\AppHeader.jsx":"7","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\index.js":"8","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\reportWebVitals.js":"9","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\App.js":"10","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx":"11","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx":"12","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\AppHeader\\AppHeader.jsx":"13","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\Coin\\Coin.jsx":"14"},{"size":535,"mtime":1659010857817,"results":"15","hashOfConfig":"16"},{"size":3957,"mtime":1684981995562,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1659010857983,"results":"19","hashOfConfig":"16"},{"size":4482,"mtime":1684982237917,"results":"20","hashOfConfig":"18"},{"size":1416,"mtime":1684980953145,"results":"21","hashOfConfig":"18"},{"size":1784,"mtime":1684981754077,"results":"22","hashOfConfig":"18"},{"size":406,"mtime":1659081596561,"results":"23","hashOfConfig":"16"},{"size":535,"mtime":1659010857817,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1659010857983,"results":"26","hashOfConfig":"25"},{"size":3957,"mtime":1684981995562,"results":"27","hashOfConfig":"25"},{"size":1784,"mtime":1684981754077,"results":"28","hashOfConfig":"25"},{"size":1416,"mtime":1684980953145,"results":"29","hashOfConfig":"25"},{"size":406,"mtime":1659081596561,"results":"30","hashOfConfig":"25"},{"size":4482,"mtime":1684982237917,"results":"31","hashOfConfig":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"8o7r1b",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fngugu",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"124z67g",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\index.js",[],[],[],"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\App.js",["77"],[],"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\reportWebVitals.js",[],[],"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\Coin\\Coin.jsx",["78"],[],"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx",[],[],"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx",[],[],"C:\\WebDev\\IvanOnTech-Moralis\\coin-exchange\\src\\components\\AppHeader\\AppHeader.jsx",[],[],"C:\\WebDev-GitHubRepo\\coin-exchange\\src\\index.js",[],[],"C:\\WebDev-GitHubRepo\\coin-exchange\\src\\reportWebVitals.js",[],[],"C:\\WebDev-GitHubRepo\\coin-exchange\\src\\App.js",["79"],[],"import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from'./components/AccountBalance/AccountBalance';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport axios from 'axios';\n\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(3));\n\n\nfunction App (props) {\n\n  const [balance, setBalance] = useState(100000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n\n  const componentDidMount = async () => {\n    //const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const response = await axios.get('https://api.coingecko.com/api/v3/coins/');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    //const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const tickerUrl = 'https://api.coingecko.com/api/v3/coins/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        //rank: coin.rank,\n        rank: coin.market_cap_rank,\n        image: coin.image.small,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        //price: formatPrice(coin.quotes.USD.price),\n        price: formatPrice(coin.market_data.current_price.usd),\n\n        //market_cap: coin.quotes.USD.market_cap,\n        market_cap: coin.market_data.market_cap.usd,\n\n        price_change_percentage_24h: coin.market_data.price_change_percentage_24h,\n        price_change_percentage_7d: coin.market_data.price_change_percentage_7d,\n        price_change_percentage_30d: coin.market_data.price_change_percentage_30d,\n\n      };\n    })\n      //retrieve the price\n      setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0 ) {\n      componentDidMount();\n    }\n  });\n\n\n  const handleChangeBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const addToBalance = 5000;\n  const handleAddToBalance = () => {\n    let newBalance = balance + addToBalance;\n    setBalance(newBalance);\n  }\n\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map( function(values) {\n      let newValues = {...values};\n      if ( valueChangeId == values.key) {\n        newValues.balance += balanceChange;\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price );\n      }\n      return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n\n  const handleInfoPopup = () => {\n\n  }\n\n\n  const handleRefresh = async (valueChangeId) => {\n    //const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const tickerUrl = `https://api.coingecko.com/api/v3/coins/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    //const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newPrice = formatPrice(response.data.coin.market_data.current_price.usd);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = { ...values };\n      if ( valueChangeId === values.key ) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n   \n      setCoinData(newCoinData);\n  }\n    return (\n      <div className=\"App\">\n        <AppHeader />\n          <AccountBalance \n            amount={balance} \n            showBalance={showBalance} \n            handleChangeBalance={handleChangeBalance} \n            handleAddToBalance={handleAddToBalance}/>\n          <CoinList \n            coinData={coinData} \n            handleRefresh={handleRefresh} \n            showBalance={showBalance}\n            handleTransaction={handleTransaction} \n            handleInfoPopup={handleInfoPopup} />\n      </div>\n    );\n}\n\nexport default App;","C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx",[],[],"C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx",[],[],"C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\AppHeader\\AppHeader.jsx",[],[],"C:\\WebDev-GitHubRepo\\coin-exchange\\src\\components\\Coin\\Coin.jsx",["80"],[],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\nimport './Coin.css';\r\n\r\nimport imgRefresh from './arrow-clockwise.svg';\r\nimport imgSell from './dash-square.svg';\r\nimport imgBuy from './plus-square.svg';\r\nimport imgInfo from './info-square.svg';\r\n\r\nimport Popup from 'reactjs-popup';\r\n\r\n \r\n\r\nconst Td = styled.td`\r\n  border: 1px solid #cccccc;\r\n  padding: .25rem;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    max-width: 1.75rem;\r\n    margin: .2rem;\r\n    `\r\n\r\nexport default function Coin(props) {\r\n\r\n    const handleRefreshClick = (event) => {\r\n        //prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleRefresh(props.tickerId);\r\n    }\r\n\r\n    const handleBuyClick = (event) => {\r\n        //prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        \r\n        props.handleTransaction(true, props.tickerId);\r\n    \r\n    }\r\n\r\n    const handleSellClick = (event) => {\r\n        //prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        \r\n        props.handleTransaction(false, props.tickerId);\r\n    }\r\n\r\n\r\n    const handleInfoClick = (event) => {\r\n        //prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleInfoPopup(props.tickerId);\r\n    }\r\n\r\n    const h24 = (props.price_change_percentage_24h).toLocaleString(undefined, { maximumFractionDigits: 2 });\r\n    const d7 = (props.price_change_percentage_7d).toLocaleString(undefined, { maximumFractionDigits: 2 });\r\n    const d30 = (props.price_change_percentage_30d).toLocaleString(undefined, { maximumFractionDigits: 2 });\r\n\r\n\r\n    return (\r\n        <tr>\r\n            \r\n            <Td>{props.rank}</Td>\r\n            <Td><Img src={props.image} alt=\"Crypto Logo\" /></Td>\r\n            <Td className=\"Cap\">{props.ticker}</Td>\r\n            <Td>${(props.price).toLocaleString(undefined, { maximumFractionDigits: 2 })}</Td>\r\n            {props.showBalance ? <Td>{props.balance}</Td> : <Td>******</Td>}\r\n            <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <img className=\"BuyIcon\" src={imgBuy} \r\n                        onClick={handleBuyClick} alt=\"Buy\" title=\"Buy\">\r\n                    </img>\r\n                    <img className=\"SellIcon\" src={imgSell} \r\n                        onClick={props.balance > 0 ? handleSellClick : handleInfoClick} alt=\"Sell\" title=\"Sell\">\r\n                    </img>\r\n                    <br/>\r\n                    <img className=\"RefreshIcon\" src={imgRefresh} \r\n                        onClick={handleRefreshClick} alt=\"Refresh\" title=\"Refresh\">\r\n                    </img>\r\n\r\n                    <Popup trigger={<img className=\"InfoIcon\" src={imgInfo}\r\n                        onClick={handleInfoClick}  \r\n                         alt=\"More Info\" title=\"More Info\">\r\n                        </img>} position=\"left center\">\r\n                            <div>\r\n                                <img src={props.image} />\r\n                                <p><b>Rank: </b>{props.rank}</p>\r\n                                <p><b>Name: </b>{props.name}</p>\r\n                                <p><b>Ticker: </b><b className=\"Cap2\">{props.ticker}</b></p>\r\n                                <p><b>Current Price: </b>${(props.price).toLocaleString(undefined, { maximumFractionDigits: 2 })}</p>\r\n                                <p><b>Market Cap: </b>${(props.market_cap).toLocaleString(undefined, { maximumFractionDigits: 2 })}</p>\r\n                                \r\n                                <p><b>24h Price Change: </b><b className={\r\n                                    props.price_change_percentage_24h < 0 ? \"Red\" : \"Green\"}>{h24} % </b></p>\r\n                                <p><b>7d Price Change: </b><b className={\r\n                                    props.price_change_percentage_7d < 0 ? \"Red\" : \"Green\"}>{d7} % </b></p>\r\n                                <p><b>30d Price Change: </b><b className={\r\n                                    props.price_change_percentage_30d < 0 ? \"Red\" : \"Green\"}>{d30} % </b></p>\r\n\r\n\r\n                            </div>\r\n\r\n                    </Popup>\r\n\r\n                </form>\r\n            </Td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    rank: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n\r\n    \r\n    \r\n}",{"ruleId":"81","severity":1,"message":"82","line":76,"column":26,"nodeType":"83","messageId":"84","endLine":76,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":86,"column":33,"nodeType":"87","endLine":86,"endColumn":58},{"ruleId":"81","severity":1,"message":"82","line":76,"column":26,"nodeType":"83","messageId":"84","endLine":76,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":86,"column":33,"nodeType":"87","endLine":86,"endColumn":58},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]
{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\IvanOnTech-Moralis\\\\coin-exchange\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COIN_COUNT = 10;\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      balance: 10000,\n      showBalance: true,\n      coinData: [\n        /*\n        {\n          name: 'Bitcoin',\n          ticker: 'BTC',\n          balance: 0.5,\n          price: 9999.99\n        },\n        {\n          name: 'Ethereum',\n          ticker: 'ETH',\n          balance: 32.0,\n          price: 299.99\n        },\n        {\n          name: 'Tether',\n          ticker: 'USDT',\n          balance: 0,\n          price: 1.0\n        },\n        {\n          name: 'Ripple',\n          ticker: 'XRP',\n          balance: 1000,\n          price: 0.2\n        },\n        {\n          name: 'Bitcoin Cash',\n          ticker: 'BCH',\n          balance: 0,\n          price: 297.99\n        },\n        */\n      ]\n    };\n\n    this.componentDidMount = async () => {\n      const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n      const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n      const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n      const promises = coinIds.map(id => axios.get(tickerUrl + id));\n      const coinData = await Promise.all(promises);\n      const coinPriceData = coinData.map(function (coin) {\n        return {\n          key: coin.id,\n          name: coin.name,\n          ticker: coin.symbol,\n          balance: 0,\n          price: coin.quotes.USD.price\n        };\n      }); //retrieve the price\n\n      this.setState({\n        coinData: coinPriceData\n      });\n    };\n\n    this.handleChangeBalance = event => {\n      event.preventDefault();\n      this.setState(function (oldState) {\n        return { ...oldState,\n          showBalance: !oldState.showBalance\n        };\n      });\n    };\n\n    this.handleRefresh = valueChangeTicker => {\n      const newCoinData = this.state.coinData.map(function (_ref) {\n        let {\n          ticker,\n          name,\n          price,\n          balance\n        } = _ref;\n        let newPrice = price;\n\n        if (valueChangeTicker === ticker) {\n          const randomPercentage = 0.995 + Math.random() * 0.01;\n          newPrice = newPrice * randomPercentage;\n        }\n\n        return {\n          ticker,\n          name,\n          price: newPrice,\n          balance\n        };\n      });\n      this.setState({\n        coinData: newCoinData\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AccountBalance, {\n        amount: this.state.balance,\n        showBalance: this.state.showBalance,\n        handleChangeBalance: this.handleChangeBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CoinList, {\n        coinData: this.state.coinData,\n        handleRefresh: this.handleRefresh,\n        showBalance: this.state.showBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","CoinList","AccountBalance","AppHeader","axios","COIN_COUNT","App","Component","state","balance","showBalance","coinData","componentDidMount","response","get","coinIds","data","slice","map","coin","id","tickerUrl","promises","Promise","all","coinPriceData","key","name","ticker","symbol","price","quotes","USD","setState","handleChangeBalance","event","preventDefault","oldState","handleRefresh","valueChangeTicker","newCoinData","newPrice","randomPercentage","Math","random","render"],"sources":["C:/WebDev/IvanOnTech-Moralis/coin-exchange/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from'./components/AccountBalance/AccountBalance';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport axios from 'axios';\n\n\nconst COIN_COUNT = 10;\n\n\nclass App extends React.Component {\n\n  state = {\n    balance: 10000,\n    showBalance: true,\n    coinData: [\n      /*\n      {\n        name: 'Bitcoin',\n        ticker: 'BTC',\n        balance: 0.5,\n        price: 9999.99\n      },\n      {\n        name: 'Ethereum',\n        ticker: 'ETH',\n        balance: 32.0,\n        price: 299.99\n      },\n      {\n        name: 'Tether',\n        ticker: 'USDT',\n        balance: 0,\n        price: 1.0\n      },\n      {\n        name: 'Ripple',\n        ticker: 'XRP',\n        balance: 1000,\n        price: 0.2\n      },\n      {\n        name: 'Bitcoin Cash',\n        ticker: 'BCH',\n        balance: 0,\n        price: 297.99\n      },\n      */\n    ]\n  }\n\n  componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(coin) {\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: coin.quotes.USD.price,\n      };\n    })\n    //retrieve the price\n    this.setState({ coinData: coinPriceData });\n  }\n\n  handleChangeBalance = (event) => {\n    event.preventDefault();\n    this.setState( function(oldState) {\n      return {\n        ...oldState,\n        showBalance: !oldState.showBalance\n      }\n    });\n  }\n\n  handleRefresh = (valueChangeTicker) => {\n    const newCoinData = this.state.coinData.map( function( {ticker, name, price, balance} ) {\n      let newPrice = price;\n      if ( valueChangeTicker === ticker ) {\n        const randomPercentage = 0.995 + Math.random() * 0.01;\n        newPrice = newPrice * randomPercentage;\n      }\n      return {\n        ticker,\n        name,\n        price: newPrice,\n        balance\n      }\n    });\n   \n      this.setState({ coinData: newCoinData });\n  }\n    render() {\n      return (\n        <div className=\"App\">\n          <AppHeader />\n            <AccountBalance \n              amount={this.state.balance} \n              showBalance={this.state.showBalance} \n              handleChangeBalance={this.handleChangeBalance} />\n            <CoinList \n              coinData={this.state.coinData} \n              handleRefresh={this.handleRefresh} \n              showBalance={this.state.showBalance} />\n        </div>\n      );\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
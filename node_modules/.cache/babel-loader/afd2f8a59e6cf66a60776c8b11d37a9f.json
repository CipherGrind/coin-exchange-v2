{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\IvanOnTech-Moralis\\\\coin-exchange\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COIN_COUNT = 10;\n\nconst formatPrice = price => parseFloat(Number(price).toFixed(3));\n\nfunction App(props) {\n  _s();\n\n  const [balance, setBalance] = useState(100000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    //const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const response = await axios.get('https://api.coingecko.com/api/v3/coins/');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id); //const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n\n    const tickerUrl = 'https://api.coingecko.com/api/v3/coins/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function (response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        //rank: coin.rank,\n        rank: coin.market_cap_rank,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        //price: formatPrice(coin.quotes.USD.price),\n        price: formatPrice(coin.market_data.current_price.usd) //circulating_supply: coin.circulating_supply,\n        //total_supply: coin.total_supply,\n        //market_cap: coin.quotes.USD.market_cap,\n\n      };\n    }); //retrieve the price\n\n    setCoinData(coinPriceData);\n  };\n\n  useEffect(function () {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleChangeBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  };\n\n  const addToBalance = 5000;\n\n  const handleAddToBalance = () => {\n    let newBalance = balance + addToBalance;\n    setBalance(newBalance);\n  };\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map(function (values) {\n      let newValues = { ...values\n      };\n\n      if (valueChangeId == values.key) {\n        newValues.balance += balanceChange;\n        setBalance(oldBalance => oldBalance - balanceChange * newValues.price);\n      }\n\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  };\n\n  const handleInfoPopup = () => {};\n\n  const handleRefresh = async valueChangeId => {\n    //const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const tickerUrl = `https://api.coingecko.com/api/v3/coins/${valueChangeId}`;\n    const response = await axios.get(tickerUrl); //const newPrice = formatPrice(response.data.quotes.USD.price);\n\n    const newPrice = formatPrice(response.data.coin.market_data.current_price.usd);\n    const newCoinData = coinData.map(function (values) {\n      let newValues = { ...values\n      };\n\n      if (valueChangeId === values.key) {\n        newValues.price = newPrice;\n      }\n\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AccountBalance, {\n      amount: balance,\n      showBalance: showBalance,\n      handleChangeBalance: handleChangeBalance,\n      handleAddToBalance: handleAddToBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CoinList, {\n      coinData: coinData,\n      handleRefresh: handleRefresh,\n      showBalance: showBalance,\n      handleTransaction: handleTransaction,\n      handleInfoPopup: handleInfoPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"OPRtliv2edWbZ3dDWPIN12r7bpk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CoinList","AccountBalance","AppHeader","axios","COIN_COUNT","formatPrice","price","parseFloat","Number","toFixed","App","props","balance","setBalance","showBalance","setShowBalance","coinData","setCoinData","componentDidMount","response","get","coinIds","data","slice","map","coin","id","tickerUrl","promises","Promise","all","coinPriceData","key","rank","market_cap_rank","name","ticker","symbol","market_data","current_price","usd","length","handleChangeBalance","oldValue","addToBalance","handleAddToBalance","newBalance","handleTransaction","isBuy","valueChangeId","balanceChange","newCoinData","values","newValues","oldBalance","handleInfoPopup","handleRefresh","newPrice"],"sources":["C:/WebDev/IvanOnTech-Moralis/coin-exchange/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from'./components/AccountBalance/AccountBalance';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport axios from 'axios';\n\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(3));\n\n\nfunction App (props) {\n\n  const [balance, setBalance] = useState(100000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n\n  const componentDidMount = async () => {\n    //const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const response = await axios.get('https://api.coingecko.com/api/v3/coins/');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    //const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const tickerUrl = 'https://api.coingecko.com/api/v3/coins/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        //rank: coin.rank,\n        rank: coin.market_cap_rank,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        //price: formatPrice(coin.quotes.USD.price),\n        price: formatPrice(coin.market_data.current_price.usd),\n\n        //circulating_supply: coin.circulating_supply,\n        //total_supply: coin.total_supply,\n\n        //market_cap: coin.quotes.USD.market_cap,\n\n      };\n    })\n      //retrieve the price\n      setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0 ) {\n      componentDidMount();\n    }\n  });\n\n\n  const handleChangeBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const addToBalance = 5000;\n  const handleAddToBalance = () => {\n    let newBalance = balance + addToBalance;\n    setBalance(newBalance);\n  }\n\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map( function(values) {\n      let newValues = {...values};\n      if ( valueChangeId == values.key) {\n        newValues.balance += balanceChange;\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price );\n      }\n      return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n\n  const handleInfoPopup = () => {\n\n  }\n\n\n  const handleRefresh = async (valueChangeId) => {\n    //const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const tickerUrl = `https://api.coingecko.com/api/v3/coins/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    //const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newPrice = formatPrice(response.data.coin.market_data.current_price.usd);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = { ...values };\n      if ( valueChangeId === values.key ) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n   \n      setCoinData(newCoinData);\n  }\n    return (\n      <div className=\"App\">\n        <AppHeader />\n          <AccountBalance \n            amount={balance} \n            showBalance={showBalance} \n            handleChangeBalance={handleChangeBalance} \n            handleAddToBalance={handleAddToBalance}/>\n          <CoinList \n            coinData={coinData} \n            handleRefresh={handleRefresh} \n            showBalance={showBalance}\n            handleTransaction={handleTransaction} \n            handleInfoPopup={handleInfoPopup} />\n      </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}